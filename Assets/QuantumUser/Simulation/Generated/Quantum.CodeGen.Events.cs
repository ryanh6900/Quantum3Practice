// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  public unsafe partial class Frame {
    public unsafe partial struct FrameEvents {
      static partial void GetEventTypeCountCodeGen(ref Int32 eventCount) {
        eventCount = 19;
      }
      static partial void GetParentEventIDCodeGen(Int32 eventID, ref Int32 parentEventID) {
        switch (eventID) {
          case EventOnRobotTakeDamage.ID: parentEventID = EventRobotEvent.ID; return;
          case EventOnRobotBlink.ID: parentEventID = EventRobotEvent.ID; return;
          case EventOnRobotDeath.ID: parentEventID = EventRobotEvent.ID; return;
          case EventOnRobotCreated.ID: parentEventID = EventRobotEvent.ID; return;
          case EventOnRobotDoubleJump.ID: parentEventID = EventRobotEvent.ID; return;
          case EventOnRobotGrounded.ID: parentEventID = EventRobotEvent.ID; return;
          case EventOnRobotJump.ID: parentEventID = EventRobotEvent.ID; return;
          case EventOnRobotRespawn.ID: parentEventID = EventRobotEvent.ID; return;
          case EventOnRobotChangeWeapon.ID: parentEventID = EventRobotEvent.ID; return;
          default: break;
        }
      }
      static partial void GetEventTypeCodeGen(Int32 eventID, ref System.Type result) {
        switch (eventID) {
          case EventOnBulletDestroyed.ID: result = typeof(EventOnBulletDestroyed); return;
          case EventOnPlayerSelectedCharacter.ID: result = typeof(EventOnPlayerSelectedCharacter); return;
          case EventRobotEvent.ID: result = typeof(EventRobotEvent); return;
          case EventOnRobotTakeDamage.ID: result = typeof(EventOnRobotTakeDamage); return;
          case EventOnRobotBlink.ID: result = typeof(EventOnRobotBlink); return;
          case EventOnRobotDeath.ID: result = typeof(EventOnRobotDeath); return;
          case EventOnRobotCreated.ID: result = typeof(EventOnRobotCreated); return;
          case EventOnRobotDoubleJump.ID: result = typeof(EventOnRobotDoubleJump); return;
          case EventOnRobotGrounded.ID: result = typeof(EventOnRobotGrounded); return;
          case EventOnRobotJump.ID: result = typeof(EventOnRobotJump); return;
          case EventOnRobotRespawn.ID: result = typeof(EventOnRobotRespawn); return;
          case EventOnRobotChangeWeapon.ID: result = typeof(EventOnRobotChangeWeapon); return;
          case EventOnGameEnded.ID: result = typeof(EventOnGameEnded); return;
          case EventOnSkillCasted.ID: result = typeof(EventOnSkillCasted); return;
          case EventOnSkillActivated.ID: result = typeof(EventOnSkillActivated); return;
          case EventOnSkillHitTarget.ID: result = typeof(EventOnSkillHitTarget); return;
          case EventOnWeaponShoot.ID: result = typeof(EventOnWeaponShoot); return;
          case EventDummyEvent.ID: result = typeof(EventDummyEvent); return;
          default: break;
        }
      }
      public EventOnBulletDestroyed OnBulletDestroyed(Int32 BulletRefHashCode, EntityRef Robot, FPVector2 BulletPosition, FPVector2 BulletDirection, AssetRef<BulletData> BulletData) {
        var ev = _f.Context.AcquireEvent<EventOnBulletDestroyed>(EventOnBulletDestroyed.ID);
        ev.BulletRefHashCode = BulletRefHashCode;
        ev.Robot = Robot;
        ev.BulletPosition = BulletPosition;
        ev.BulletDirection = BulletDirection;
        ev.BulletData = BulletData;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnPlayerSelectedCharacter OnPlayerSelectedCharacter(PlayerRef PlayerRef) {
        var ev = _f.Context.AcquireEvent<EventOnPlayerSelectedCharacter>(EventOnPlayerSelectedCharacter.ID);
        ev.PlayerRef = PlayerRef;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotTakeDamage OnRobotTakeDamage(EntityRef Robot, FP Damage, EntityRef Source) {
        var ev = _f.Context.AcquireEvent<EventOnRobotTakeDamage>(EventOnRobotTakeDamage.ID);
        ev.Robot = Robot;
        ev.Damage = Damage;
        ev.Source = Source;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotBlink OnRobotBlink(EntityRef Robot) {
        var ev = _f.Context.AcquireEvent<EventOnRobotBlink>(EventOnRobotBlink.ID);
        ev.Robot = Robot;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotDeath OnRobotDeath(EntityRef Robot, EntityRef Killer) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnRobotDeath>(EventOnRobotDeath.ID);
        ev.Robot = Robot;
        ev.Killer = Killer;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotCreated OnRobotCreated(EntityRef Robot) {
        var ev = _f.Context.AcquireEvent<EventOnRobotCreated>(EventOnRobotCreated.ID);
        ev.Robot = Robot;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotDoubleJump OnRobotDoubleJump(EntityRef Robot) {
        var ev = _f.Context.AcquireEvent<EventOnRobotDoubleJump>(EventOnRobotDoubleJump.ID);
        ev.Robot = Robot;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotGrounded OnRobotGrounded(EntityRef Robot) {
        var ev = _f.Context.AcquireEvent<EventOnRobotGrounded>(EventOnRobotGrounded.ID);
        ev.Robot = Robot;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotJump OnRobotJump(EntityRef Robot) {
        var ev = _f.Context.AcquireEvent<EventOnRobotJump>(EventOnRobotJump.ID);
        ev.Robot = Robot;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotRespawn OnRobotRespawn(EntityRef Robot) {
        var ev = _f.Context.AcquireEvent<EventOnRobotRespawn>(EventOnRobotRespawn.ID);
        ev.Robot = Robot;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRobotChangeWeapon OnRobotChangeWeapon(EntityRef Robot) {
        var ev = _f.Context.AcquireEvent<EventOnRobotChangeWeapon>(EventOnRobotChangeWeapon.ID);
        ev.Robot = Robot;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnGameEnded OnGameEnded() {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnGameEnded>(EventOnGameEnded.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnSkillCasted OnSkillCasted(EntityRef Skill) {
        var ev = _f.Context.AcquireEvent<EventOnSkillCasted>(EventOnSkillCasted.ID);
        ev.Skill = Skill;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnSkillActivated OnSkillActivated(FPVector2 SkillPosition) {
        var ev = _f.Context.AcquireEvent<EventOnSkillActivated>(EventOnSkillActivated.ID);
        ev.SkillPosition = SkillPosition;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnSkillHitTarget OnSkillHitTarget(FPVector2 SkillPosition, Int64 SkillDataId, EntityRef Target) {
        var ev = _f.Context.AcquireEvent<EventOnSkillHitTarget>(EventOnSkillHitTarget.ID);
        ev.SkillPosition = SkillPosition;
        ev.SkillDataId = SkillDataId;
        ev.Target = Target;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnWeaponShoot OnWeaponShoot(EntityRef Robot) {
        var ev = _f.Context.AcquireEvent<EventOnWeaponShoot>(EventOnWeaponShoot.ID);
        ev.Robot = Robot;
        _f.AddEvent(ev);
        return ev;
      }
      public EventDummyEvent DummyEvent() {
        var ev = _f.Context.AcquireEvent<EventDummyEvent>(EventDummyEvent.ID);
        _f.AddEvent(ev);
        return ev;
      }
    }
  }
  public unsafe partial class EventOnBulletDestroyed : EventBase {
    public new const Int32 ID = 1;
    public Int32 BulletRefHashCode;
    public EntityRef Robot;
    public FPVector2 BulletPosition;
    public FPVector2 BulletDirection;
    public AssetRef<BulletData> BulletData;
    protected EventOnBulletDestroyed(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnBulletDestroyed() : 
        base(1, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 41;
        hash = hash * 31 + BulletRefHashCode.GetHashCode();
        hash = hash * 31 + Robot.GetHashCode();
        hash = hash * 31 + BulletPosition.GetHashCode();
        hash = hash * 31 + BulletDirection.GetHashCode();
        hash = hash * 31 + BulletData.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnPlayerSelectedCharacter : EventBase {
    public new const Int32 ID = 2;
    public PlayerRef PlayerRef;
    protected EventOnPlayerSelectedCharacter(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnPlayerSelectedCharacter() : 
        base(2, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 43;
        hash = hash * 31 + PlayerRef.GetHashCode();
        return hash;
      }
    }
  }
  public abstract unsafe partial class EventRobotEvent : EventBase {
    public new const Int32 ID = 3;
    public EntityRef Robot;
    protected EventRobotEvent(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 47;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotTakeDamage : EventRobotEvent {
    public new const Int32 ID = 4;
    public FP Damage;
    public EntityRef Source;
    protected EventOnRobotTakeDamage(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotTakeDamage() : 
        base(4, EventFlags.Server|EventFlags.Client) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 53;
        hash = hash * 31 + Robot.GetHashCode();
        hash = hash * 31 + Damage.GetHashCode();
        hash = hash * 31 + Source.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotBlink : EventRobotEvent {
    public new const Int32 ID = 5;
    protected EventOnRobotBlink(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotBlink() : 
        base(5, EventFlags.Server|EventFlags.Client) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 59;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotDeath : EventRobotEvent {
    public new const Int32 ID = 6;
    public EntityRef Killer;
    protected EventOnRobotDeath(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotDeath() : 
        base(6, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 61;
        hash = hash * 31 + Robot.GetHashCode();
        hash = hash * 31 + Killer.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotCreated : EventRobotEvent {
    public new const Int32 ID = 7;
    protected EventOnRobotCreated(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotCreated() : 
        base(7, EventFlags.Server|EventFlags.Client) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 67;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotDoubleJump : EventRobotEvent {
    public new const Int32 ID = 8;
    protected EventOnRobotDoubleJump(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotDoubleJump() : 
        base(8, EventFlags.Server|EventFlags.Client) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 71;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotGrounded : EventRobotEvent {
    public new const Int32 ID = 9;
    protected EventOnRobotGrounded(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotGrounded() : 
        base(9, EventFlags.Server|EventFlags.Client) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 73;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotJump : EventRobotEvent {
    public new const Int32 ID = 10;
    protected EventOnRobotJump(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotJump() : 
        base(10, EventFlags.Server|EventFlags.Client) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 79;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotRespawn : EventRobotEvent {
    public new const Int32 ID = 11;
    protected EventOnRobotRespawn(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotRespawn() : 
        base(11, EventFlags.Server|EventFlags.Client) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 83;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRobotChangeWeapon : EventRobotEvent {
    public new const Int32 ID = 12;
    protected EventOnRobotChangeWeapon(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRobotChangeWeapon() : 
        base(12, EventFlags.Server|EventFlags.Client) {
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 89;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnGameEnded : EventBase {
    public new const Int32 ID = 13;
    protected EventOnGameEnded(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnGameEnded() : 
        base(13, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 97;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnSkillCasted : EventBase {
    public new const Int32 ID = 14;
    public EntityRef Skill;
    protected EventOnSkillCasted(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnSkillCasted() : 
        base(14, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 101;
        hash = hash * 31 + Skill.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnSkillActivated : EventBase {
    public new const Int32 ID = 15;
    public FPVector2 SkillPosition;
    protected EventOnSkillActivated(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnSkillActivated() : 
        base(15, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 103;
        hash = hash * 31 + SkillPosition.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnSkillHitTarget : EventBase {
    public new const Int32 ID = 16;
    public FPVector2 SkillPosition;
    public Int64 SkillDataId;
    public EntityRef Target;
    protected EventOnSkillHitTarget(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnSkillHitTarget() : 
        base(16, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 107;
        hash = hash * 31 + SkillPosition.GetHashCode();
        hash = hash * 31 + SkillDataId.GetHashCode();
        hash = hash * 31 + Target.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnWeaponShoot : EventBase {
    public new const Int32 ID = 17;
    public EntityRef Robot;
    protected EventOnWeaponShoot(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnWeaponShoot() : 
        base(17, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 109;
        hash = hash * 31 + Robot.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventDummyEvent : EventBase {
    public new const Int32 ID = 18;
    protected EventDummyEvent(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventDummyEvent() : 
        base(18, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 113;
        return hash;
      }
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
